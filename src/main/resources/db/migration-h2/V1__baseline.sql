-- H2 baseline matching current entities

CREATE TABLE brand (
  id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name         VARCHAR(255) NOT NULL UNIQUE,
  slug         VARCHAR(150) NOT NULL UNIQUE,
  logo_url     VARCHAR(2048),
  created_at   TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at   TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);
CREATE INDEX idx_brand_slug ON brand(slug);

CREATE TABLE category (
  id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name         VARCHAR(255) NOT NULL UNIQUE,
  slug         VARCHAR(150) NOT NULL UNIQUE,
  icon_url     VARCHAR(2048),
  created_at   TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at   TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);
CREATE INDEX idx_category_slug ON category(slug);

CREATE TABLE device (
  id             BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name           VARCHAR(255) NOT NULL,
  processor      VARCHAR(255),
  ram            VARCHAR(255),
  storage        VARCHAR(255),
  price_amount   NUMERIC(12,2),
  price_currency CHAR(3) DEFAULT 'INR',
  release_date   DATE,
  slug           VARCHAR(255) NOT NULL UNIQUE,
  is_deleted     BOOLEAN NOT NULL DEFAULT FALSE,

  brand_id       BIGINT NOT NULL,
  category_id    BIGINT NOT NULL,

  created_at     TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at     TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

  CONSTRAINT fk_device_brand_id
    FOREIGN KEY (brand_id) REFERENCES brand(id),
  CONSTRAINT fk_device_category_id
    FOREIGN KEY (category_id) REFERENCES category(id),
  CONSTRAINT uq_device_brand_name_release UNIQUE (brand_id, name, release_date)
);
CREATE INDEX idx_device_brand_id     ON device(brand_id);
CREATE INDEX idx_device_category_id  ON device(category_id);
CREATE INDEX idx_device_release_date ON device(release_date);
CREATE INDEX idx_device_price        ON device(price_amount);
CREATE INDEX idx_device_is_deleted   ON device(is_deleted);
CREATE INDEX idx_device_slug         ON device(slug);

CREATE TABLE image (
  id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  url          VARCHAR(2048) NOT NULL,
  alt_text     VARCHAR(255),
  is_primary   BOOLEAN NOT NULL DEFAULT FALSE,
  sort_order   INTEGER,
  device_id    BIGINT NOT NULL,
  created_at   TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at   TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

  CONSTRAINT fk_image_device
    FOREIGN KEY (device_id) REFERENCES device(id) ON DELETE CASCADE
);
CREATE INDEX idx_image_device_id ON image(device_id);

CREATE TABLE review (
  id             BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  reviewer_name  VARCHAR(255),
  content        CLOB,
  rating         NUMERIC(2,1),
  source_url     VARCHAR(2048),
  device_id      BIGINT NOT NULL,
  created_at     TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at     TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

  CONSTRAINT fk_review_device
    FOREIGN KEY (device_id) REFERENCES device(id) ON DELETE CASCADE,
  CONSTRAINT chk_review_rating_range
    CHECK (rating IS NULL OR (rating >= 0 AND rating <= 5.0))
);
CREATE INDEX idx_review_device_id ON review(device_id);

CREATE TABLE tag (
  id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name  VARCHAR(100) NOT NULL UNIQUE,
  slug  VARCHAR(150) NOT NULL UNIQUE
);
CREATE INDEX idx_tag_slug ON tag(slug);

CREATE TABLE device_tag (
  device_id BIGINT NOT NULL,
  tag_id    BIGINT NOT NULL,
  PRIMARY KEY (device_id, tag_id),
  CONSTRAINT fk_device_tag_device FOREIGN KEY (device_id) REFERENCES device(id) ON DELETE CASCADE,
  CONSTRAINT fk_device_tag_tag    FOREIGN KEY (tag_id)    REFERENCES tag(id)    ON DELETE CASCADE
);

CREATE TABLE spec_key (
  id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name      VARCHAR(100) NOT NULL UNIQUE,
  spec_type VARCHAR(50)
);

CREATE TABLE device_spec (
  id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  device_id    BIGINT NOT NULL,
  spec_key_id  BIGINT NOT NULL,
  value_text   CLOB,
  created_at   TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at   TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

  CONSTRAINT fk_device_spec_device   FOREIGN KEY (device_id)   REFERENCES device(id) ON DELETE CASCADE,
  CONSTRAINT fk_device_spec_speckey  FOREIGN KEY (spec_key_id) REFERENCES spec_key(id),
  CONSTRAINT uq_device_spec UNIQUE (device_id, spec_key_id)
);
CREATE INDEX idx_device_spec_device ON device_spec(device_id);
CREATE INDEX idx_device_spec_key    ON device_spec(spec_key_id);

-- Note: H2 cannot enforce the "one primary image per device" partial unique index;
-- enforce in service layer during dev/tests if needed.